#LyX file created by tex2lyx 2.3
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin C:/GitHub/ai/doc/source/
\textclass article
\use_default_options false
\begin_modules
theorems-ams
graphicboxes
\end_modules
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding auto
\fontencoding default
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype true
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 2
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
 Lower Bound on the Worst Case Sample Complexity to Solve 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
QFK
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset CommandInset label
LatexCommand label
name "app:lowerboundqfk"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  Before going into the main body of the proof, first, we notice that unlike the best subset selection problem,
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  in this case, there might be multiple solutions. 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  To prove the lower bound we shall first identify a class of PAC algorithms such that 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  if there is a PAC algorithm that solves 
\backslash
QFK instance, then there exists
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  a corresponding member in this class, whose ``sampling behaviour'' does not change by permuting the arm indices. An algorithm that belongs to that class we name it as 
\backslash
underbar{P}ermutation 
\backslash
underbar{I}nvariant 
\backslash
underbar{S}ampling 
\backslash
underbar{P}AC 
\backslash
underbar{A}lgorithm (
\backslash
iispa). Such an algorithm 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  solve that instance of 
\backslash
QFK using the expected number of samples not more than that of the one in question. Below, we formally define it.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% 
\backslash
subsection{Permutation Invariant Sampling}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% Let $J$  be a set of indices such that $|J| = |
\backslash
A|$. We call a one-to-one association
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% between each element of $J$ with an element in $
\backslash
A$ as indexing, and let 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% $
\backslash
mathcal{L}(J)$ be the set of all possible indexings with $J$. Therefore, each element of $
\backslash
mathcal{L}(J)$ gives a different indexing of the arms. For a particular indexing $L$, 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% we denote the bandit instance as $
\backslash
A(L)$, and the corresponding instance of  
\backslash
QFK
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% as $
\backslash
QFKL{L}$. 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% Therefore, for a fixed tuple $(
\backslash
A, n, m, k, 
\backslash
epsilon, 
\backslash
delta)$
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% two different indexings $L_1$ and  $L_2$, give rise two different indexed instances--$
\backslash
QFKL{L_1}$ and $
\backslash
QFKL{L_2}$.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% We note that the $i$-th arm 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% $a_i 
\backslash
in
\backslash
A(L_1)$ in $
\backslash
QFKL{L_1}$ may possibly be different from $a_i 
\backslash
in 
\backslash
A(L_2)$
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% in $
\backslash
QFKL{L_2}$. For convenience, given a 
\backslash
QFK instance, let us define a ``family" of 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% indexed instances as $
\backslash
F_J 
\backslash
defeq 
\backslash
{
\backslash
QFKL{L} : L 
\backslash
in 
\backslash
mathcal{L}(J)
\backslash
}$. We note, given two
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% indexings $L_1, L_2 
\backslash
in 
\backslash
mathcal{L}(J)$, 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% indexed instances $
\backslash
QFKL{L_1}$,  $
\backslash
QFKL{L_2} 
\backslash
in 
\backslash
F_J $, if their
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% underlying 
\backslash
QFK instances are the identical, and both .
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% Also, under any particular indexing $L 
\backslash
in 
\backslash
mathcal{L}(J)$, we denote $
\backslash
Pr
\backslash
{
\backslash
cdot|
\backslash
QFKL{L}
\backslash
}$  as $
\backslash
Pr_L
\backslash
{
\backslash
cdot
\backslash
}$.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  
\backslash
begin{assumption}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   For convenience, we shall restrict ourselves to $J = [n]$, where $[n] = 
\backslash
{1, 
\backslash
cdots, n
\backslash
}$.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   We shall use $
\backslash
mathcal{L}$ and $
\backslash
F$ to denote $
\backslash
mathcal{L}([n])$, and $
\backslash
F_{[n]}$
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   respectively.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  
\backslash
end{assumption}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  Let, history $H_{T-1} 
\backslash
defeq 
\backslash
{(
\backslash
mathbf{a}_t, r_t)
\backslash
}_{t=1}^{T-1}$
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  be a sequence of tuples consisting of index of the arm pulled at $t$, and its instantaneous reward.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  Also,  given $
\backslash
A$,
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  let $
\backslash
mathcalH_{T-1}$ be the set of all possible histories (of length $T-1$) 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  generated from $
\backslash
A$. Assume $h(
\backslash
cdot)$ is a
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  mapping defined as $h: 
\backslash
mathcalH_t 
\backslash
mapsto 
\backslash
D$, where $
\backslash
D$ is the set of all probability mass
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  functions (p.m.f.) over $
\backslash
A(L)$. Also, we define a mapping called stopping criterion as
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  $ 
\backslash
textsc{R}_
\backslash
textsc{S}: 
\backslash
{
\backslash
mathcalH_T
\backslash
}_{T=1}^
\backslash
infty 
\backslash
mapsto 
\backslash
{
\backslash
textsc{True, False}
\backslash
}$.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  We define an algorithm as a map from the set of all instances of 
\backslash
QFK to the set of $k$-sized subsets of $
\backslash
A$. 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  Also, it is specified by the tuple $(h, 
\backslash
textsc{R}_
\backslash
textsc{S})$, such that at each time step $t$, it pulls an 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  arm $
\backslash
mathbf{a}_t$ chosen by sampling $h(H_{t-1})$, unless the stopping criterion $
\backslash
textsc{R}_
\backslash
textsc{S}(H_{t-1})$
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  becomes 
\backslash
textsc{True}. If $
\backslash
textsc{R}_
\backslash
textsc{S}(H_{t-1}) = 
\backslash
textsc{True}$, the algorithm stops and output a 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  $k$-sized subset from $
\backslash
A$.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  At this point, we note an important fact. Letting
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  $
\backslash
QFKL{L_1}, 
\backslash
QFKL{L_2} 
\backslash
in 
\backslash
F$,
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  suppose $H_{T-1}^1$ and $H_{T-1}^2$ are two histories generated 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  from $
\backslash
QFKL{L_1}$ and $
\backslash
QFKL{L_2}$ respectively. Let, there exists $t 
\backslash
leq T$, such that $H_{t-1}^1 
\backslash
equiv H_{t-1}^2$,
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  then given an algorithm, $h(H_{t-1}^1) 
\backslash
equiv  h(H_{t-1}^2)$; therefore, 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  for all $i 
\backslash
in J$, $
\backslash
Pr_{L_1}(
\backslash
mathbf{a}_t = a_i | H_{t-1}^1)  = 
\backslash
Pr_{L_2}(
\backslash
mathbf{a}_t = a_i | H_{t-1}^2)$.
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% Now we are ready to formally define the permutation invariant sampling ``behavior'' of PAC algorithms.
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  
\backslash
begin{definition}[
\backslash
underbar{P}ermutation 
\backslash
underbar{I}nvariant 
\backslash
underbar{S}ampling 
\backslash
underbar{P}AC 
\backslash
underbar{A}lgorithm (
\backslash
iispa):]
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   
\backslash
label{defn:iispa}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   Given two indexed instances $
\backslash
QFKL{L_1}$, $
\backslash
QFKL{L_2}$ $
\backslash
in 
\backslash
F$, let $
\backslash
sigma(
\backslash
cdot)$
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   be the mapping from the index of arm in $
\backslash
A(L_1)$ to the corresponding index
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   in $
\backslash
A(L_2)$. In other words, if the arm $a_j 
\backslash
in 
\backslash
A(L_1)$ is indexed as $a_{j'} 
\backslash
in 
\backslash
A(L_2)$,
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   then $
\backslash
sigma(j) = j'$. Suppose, $H_{t-1}$ is a given history. Also, assume $H_{t-1}'$ is obtained from $H_{t-1}$ by
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   replacing $i$ with $
\backslash
sigma(i)$, for all $i 
\backslash
in J$; leaving the instantaneous rewards in place.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   We call a PAC algorithm $ALG$ a 
\backslash
iispa  if 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% %   for given two histories $H_{t-1}$ and $H_{t-1}'$ generated from $A(L_1)$ and $A(L_2)$  respectively, 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   it satisfies:
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   $
\backslash
forall i 
\backslash
in J$,
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%     $
\backslash
Pr_{L_1}
\backslash
{
\backslash
mathbf{a}_t = a_i |H_{t-1}
\backslash
} =$ $
\backslash
Pr_{L_2}
\backslash
{
\backslash
mathbf{a}_t = a_{
\backslash
sigma(i)}|H_{t-1}'
\backslash
}$. 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% 
\backslash
end{definition}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   Given a history suppose we swap only indices of any two arms, say $i$ and $i'$
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   (keeping their corresponding instantaneous rewards and everything else in place).
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   Intuitively, under the action of 
\backslash
iispa the probability that the $i$-th arm to be pulled in the next round before swapping, will be equal
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   to the probability of the $i'$-th arm after swapping. Next, we are going to show that formally.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  
\backslash
begin{lemma}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   
\backslash
label{lem:iispaevntprob}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   Let $ALG$ be an  
\backslash
iispa. We assume a $
\backslash
QFKL{L} 
\backslash
in 
\backslash
F$, such that there are two arms $a_i, a_{i'} 
\backslash
in A(L)$  (for $i, i' 
\backslash
in J$) which have identical reward distributions. Also, assume for a given  history $H_{t-1}$, that got  generated from $A(L)$, let $H_{t-1}'$ be obtained from it by replacing the occurrences of $a_i$ by $a_{i'}$, and vice-versa (without changing the corresponding instantaneous reward).  Then, under the action of  
\backslash
textsc{ALG},
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   $
\backslash
Pr_L
\backslash
{
\backslash
mathbf{a}_t = a_i| H_{t-1}
\backslash
} = 
\backslash
Pr_L
\backslash
{
\backslash
mathbf{a}_t = a_{i'}| H_{t-1}'
\backslash
}$.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  
\backslash
end{lemma}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  
\backslash
begin{proof}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   Let us assume, the given statement (in the theorem) is false, 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   
\backslash
ie $
\backslash
Pr_L
\backslash
{
\backslash
mathbf{a}_t = a_i| H_{t-1}
\backslash
} 
\backslash
neq 
\backslash
Pr_L
\backslash
{
\backslash
mathbf{a}_t = a_{i'}| H_{t-1}'
\backslash
}$.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   Now, consider $L$ and $L'$ are two different indexings such that the arms $a_i, a_{i'} 
\backslash
in 
\backslash
A(L)$ are respectively mapped to $a_{i'}$ and $a_i$  in $
\backslash
A(L')$; 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   however, for any other arm $a_j 
\backslash
in 
\backslash
A(L)$ such that $j 
\backslash
not
\backslash
in 
\backslash
{i, i'
\backslash
}$, the index remains the same in $
\backslash
A(L')$.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   Now, as $ALG$ is a 
\backslash
iispa, therefore, $
\backslash
Pr_L
\backslash
{
\backslash
mathbf{a}_t = a_i| H_{t-1}
\backslash
} = 
\backslash
Pr_{L'}
\backslash
{
\backslash
mathbf{a}_t = a_{i'}| H_{t-1}'
\backslash
}$.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   However, by the definition of an algorithm, given a fixed history, an algorithm generates the
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   same sampling distribution over the arms; hence,
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   $
\backslash
Pr_{L'}
\backslash
{
\backslash
mathbf{a}_t = a_{i'}| H_{t-1}'
\backslash
} = 
\backslash
Pr_L
\backslash
{
\backslash
mathbf{a}_t = a_{i'}| H_{t-1}'
\backslash
}$,
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   which leads to a contradiction,   thereby proving the theorem.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  
\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  
\backslash
begin{corollary}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   
\backslash
label{cor:iispaevntprob}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% %   
\backslash
filler{SHOULD WE MOVE IT TO THE MAIN BODY OF THE PROOF? }
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   Let $ALG$ be a 
\backslash
iispa. We are given an $
\backslash
A(L)$, such that there are two arms $a_i$ and $a_{i'}$ in $
\backslash
A(L)$
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   whose the reward distributions are identical.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   Then, under the action of $ALG$ on $
\backslash
A(L)$ for $t$ time steps, $
\backslash
Pr_L
\backslash
{H_{t}
\backslash
} = 
\backslash
Pr_L
\backslash
{H_{t}'
\backslash
}$, where $H_t'$
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   is obtained by replacing the occurrences of $a_i$ by $a_{i'}$, and vice-versa (leaving the corresponding instantaneous rewards in place).
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  
\backslash
end{corollary}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% 
\backslash
begin{theorem}[Existence of Permutation Invariant Sampling PAC Algorithm]
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  
\backslash
label{defn:idpa2iispa}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% If there is a PAC algorithm that solves 
\backslash
QFK, there exists a 
\backslash
iispa which solves the
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% problem, with an expected sample complexity upper bounded by that of the given algorithm.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% 
\backslash
end{theorem}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% 
\backslash
begin{proof}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% We shall prove this theorem by construction.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  Suppose $
\backslash
textsc{ALG}^{D}$ is a PAC algorithm that solves 
\backslash
QFK.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% %  Also, assume that $N^D$ be the expected sample
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% %  complexity of $
\backslash
textsc{ALG}^{D}$.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  Algorithm~
\backslash
ref{alg:iispa} describes a
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  procedure $
\backslash
textsc{ALG}^{I}$. We shall show that if $
\backslash
textsc{ALG}^{D}$ is PAC, then
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   $
\backslash
textsc{ALG}^{I}$ is 
\backslash
iispa and its expected sample complexity is no more than that of 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   $
\backslash
textsc{ALG}^{D}$.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% 
\backslash
begin{algorithm}[]
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% 
\backslash
DontPrintSemicolon
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% 
\backslash
caption{$
\backslash
textsc{ALG}^{I}$}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% 
\backslash
label{alg:iispa}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  
\backslash
KwIn{ $
\backslash
QFKL{L}, J, 
\backslash
mathcal{L}, 
\backslash
textsc{ALG}^{D}$}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  Select an element $L' 
\backslash
in 
\backslash
mathcal{L}$ uniformly at random, and determine 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   $
\backslash
sigma(
\backslash
cdot)$, such that $
\backslash
forall i 
\backslash
in J$, if $a_i 
\backslash
in 
\backslash
A(L)$ is indexed 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   as  $a_{i'}$ in $L'$, then  $
\backslash
sigma(i)= i'$.
\backslash
;
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  Solve $
\backslash
QFKL{L'}$ using $
\backslash
textsc{ALG}^{D}$.
\backslash
;
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  Map the result from $L'$ to $L$ by $
\backslash
sigma^{-1}(L')$ and return.
\backslash
;
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  
\backslash
end{algorithm}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  
\backslash
textbf{Correctness:} The underlying $
\backslash
textsc{ALG}^{D}$ being PAC and $
\backslash
sigma$ being bijective,  $
\backslash
textsc{ALG}^{I}$ is PAC. 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  
\backslash
textbf{Permutation Invariant Sampling:} Let us consider $
\backslash
QFKL{L_1}, 
\backslash
QFKL{L_2} 
\backslash
in 
\backslash
F$.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   Assume that $a_i 
\backslash
in 
\backslash
A(L_1)$ is indexed as $a_{i'} 
\backslash
in 
\backslash
A(L_2)$.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   Also, suppose $H_{t-1}$ is the generated history by a run of $
\backslash
textsc{ALG}^{I}$ on $
\backslash
A(L)$. 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  Recalling $L'$ is the indexing chosen by $
\backslash
textsc{ALG}^{I}$, we notice that the probability of choosing $L'$ from $
\backslash
mathcal{L}$ is independent
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  of the input indexing. Hence, $
\backslash
Pr_{L_1}
\backslash
{L'
\backslash
} = 
\backslash
Pr_{L_2}
\backslash
{L'
\backslash
}$.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   Let $
\backslash
sigma_1 : L_1 
\backslash
mapsto L'$, and $
\backslash
sigma_2 : L_2 
\backslash
mapsto L'$ be two bijective maps.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  Therefore, letting $
\backslash
Pr_{L_1}
\backslash
{L'
\backslash
} = 
\backslash
Pr_{L_2}
\backslash
{L'
\backslash
} = q_{L'}$ we notice
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  $
\backslash
Pr_{L_1}
\backslash
{
\backslash
mathbf{a}_{t} = a_i
\backslash
} = 
\backslash
sum_{L' 
\backslash
in 
\backslash
mathcal{L}} 
\backslash
Pr_{L'}
\backslash
{
\backslash
mathbf{a}_{t} = a_{
\backslash
sigma_1(i)}
\backslash
}  
\backslash
cdot q_{L'} = 
\backslash
sum_{L' 
\backslash
in 
\backslash
mathcal{L}} 
\backslash
Pr_{L'}
\backslash
{
\backslash
mathbf{a}_{t} = a_{
\backslash
sigma_2(i')}
\backslash
}  
\backslash
cdot q_{L'} = 
\backslash
Pr_{L_2}
\backslash
{
\backslash
mathbf{a}_{t} = a_{i'}
\backslash
}$. Hence, $
\backslash
textsc{ALG}^{I}$ is 
\backslash
iispa.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  
\backslash
textbf{Sample Complexity:}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% %  Considering a fixed index set $J$, 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  Let $E[SC(
\backslash
textsc{ALG}) | 
\backslash
QFKL{L}]$ be the expected number of samples incurred by some algorithm $
\backslash
textsc{ALG}$
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  to solve $
\backslash
QFKL{L}$. Then, the worst case expected sample complexity of
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  $
\backslash
textsc{ALG}^{D}$ is given by 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  $E[SC(
\backslash
textsc{ALG}^{D})] = 
\backslash
max_{L 
\backslash
in 
\backslash
mathcal{L}} E[SC(
\backslash
textsc{ALG}^{D})|
\backslash
QFKL{L}]$.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% %  = N^D$ (say). 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  Now, letting the probability of picking the $L'$ from $
\backslash
mathcal{L}$
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  be $q_{L'}$, we get, $E[SC(
\backslash
textsc{ALG}^{I})] = 
\backslash
sum_{L' 
\backslash
in 
\backslash
mathcal{L}} E[SC(
\backslash
textsc{ALG}^D) | 
\backslash
QFKL{L'}] 
\backslash
cdot q_{L'} 
\backslash
leq 
\backslash
max_{L' 
\backslash
in 
\backslash
mathcal{L'}} E[SC(
\backslash
textsc{ALG}^D) | 
\backslash
QFKL{L'}] = E[SC(
\backslash
textsc{ALG}^{D})]$. 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% %  Now, this is  true for any arbitrary index set $J$.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  Therefore, the statement follows.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% 
\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% 
\backslash
textbf{NOTE:} From now onward we  shall go by the conventions and notations adopted in the proof of the worst case sample complexity lower bound~
\backslash
citep[Section 4]{bib:lucb}.
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% Now we enter the main proof.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% 
\backslash
subsection{Proof of the Theorem~
\backslash
ref{thm:lbmainthm}}
\backslash
label{subsec:lbproof}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% 
\backslash
subsection{The Main Body of the Proof of Lower Bound}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%%%%%%%%%%%%%%% [Lower Bound on Sample Complexity to solve $
\backslash
textsc{Q-F}_k$] %%%%%%%%%%
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
thmlbmainthm*
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%%%%%%%%%%%%%%%
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The proof technique for Theorem
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "thm:lbmainthm"
plural "false"
caps "false"
noprefix "false"

\end_inset

 follows a path similar to that of
\begin_inset space ~

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
citep[Theorem 8]{bib:lucb}
\end_layout

\end_inset

, but differs in the fact that any 
\begin_inset Formula $k$
\end_inset

 of the 
\begin_inset Formula $m$
\end_inset

 
\begin_inset Formula $(\epsilon, m)$
\end_inset

-optimal arms needs to be returned as opposed to all the 
\begin_inset Formula $m$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  For convenience, we break the proof into
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  two parts. First, we prove it for the problem instances where either $m 
\backslash
leq 2k -2$ or
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  $m 
\backslash
geq 2k$; then we show that if the lower bound holds for those cases, it must hold
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  for $m= 2k-1$ for a sufficiently small constant.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Bandit Instances:
\end_layout

\begin_layout Standard
Assume we are given a set of 
\begin_inset Formula $n$
\end_inset

 arms 
\begin_inset Formula $\mathcal{A} = \{0, 1, 2, \cdots, n-1\}$
\end_inset

. Let 
\begin_inset Formula $I_0 \defeq \{0, 1, 2, \cdots, m-k\}$
\end_inset

 and 
\begin_inset Formula $\I_l \defeq \{I : I\subseteq \{\mathcal{A}\setminus I_0\} \wedge |I| = l\}$
\end_inset

. Also for 
\begin_inset Formula $I \subseteq \{m-k+1, m-k+2,\cdots,n-1\}$
\end_inset

, we define 
\begin_inset Formula \[\bar{I} \defeq \{m-k+1, m-k+2,\cdots,n-1\} \setminus I.\]
\end_inset


\end_layout

\begin_layout Standard
With each 
\begin_inset Formula $I \in \I_{k-1} \cup \I_m$
\end_inset

 we associate an 
\begin_inset Formula $n$
\end_inset

-armed bandit instance 
\begin_inset Formula $\mathcal{B}^I$
\end_inset

, in which each arm 
\begin_inset Formula $a$
\end_inset

 produces a reward from a Bernoulli distribution with mean 
\begin_inset Formula $\mu_a$
\end_inset

 defined as: 
\begin_inset Formula \begin{align}
   \mu_a = \begin{cases}
            \frac{1}{2} & \text{ if } a \in I_0\\
        \frac{1}{2} + 2\epsilon & \text{ if } a \in I\\
        \frac{1}{2} - 2\epsilon & \text{ if } a \in \bar{I}.
           \end{cases}
  \end{align}
\end_inset

Notice that all the instances in 
\begin_inset Formula $ \I_{k-1} \cup \I_m$
\end_inset

 have exactly 
\begin_inset Formula $m$
\end_inset

 
\begin_inset Formula $(\epsilon, m)$
\end_inset

-optimal arms. For 
\begin_inset Formula $I \in \I_{k-1}$
\end_inset

, all the arms in 
\begin_inset Formula $I_0$
\end_inset

 are 
\begin_inset Formula $(\epsilon, m)$
\end_inset

-optimal, but for 
\begin_inset Formula $I \in \I_m$
\end_inset

 they are not. With slight overloading of notation we write 
\begin_inset Formula $\mu(S)$
\end_inset

 to denote the multi-set consisting of means of the arms in 
\begin_inset Formula $S\subseteq \A$
\end_inset

.
\end_layout

\begin_layout Standard
The key idea of the proof is that without sufficient sampling of each arm, it is not possible to correctly identify 
\begin_inset Formula $k$
\end_inset

 of the 
\begin_inset Formula $(\epsilon, m)$
\end_inset

-optimal arms with high probability.
\end_layout

\begin_layout Subsection
Bounding the Error Probability:
\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% 
\backslash
textbf{Bounding Error Probability}:
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

We shall prove the theorem by first making the following assumption, which we shall demonstrate leads to a contradiction.
\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
begin{assumption}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "asmp:contra"

\end_inset

 Assume, that there exists an algorithm 
\begin_inset Formula $\mathcal{L}$
\end_inset

, that solves each problem instance 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%$(
\backslash
A, n, m, k, 
\backslash
epsilon, 
\backslash
delta)$
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

in 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
QFK
\end_layout

\end_inset

 defined on bandit instance 
\begin_inset Formula $\mathcal{B}^I,\; I \in \I_{k-1}$
\end_inset

, and incurs a sample complexity 
\begin_inset Formula $\textsc{SC}_I$
\end_inset

. Then for all 
\begin_inset Formula $I \in \I_{k-1}$
\end_inset

, 
\begin_inset Formula $\Ex{\textsc{SC}_I} < \frac{1}{18375}. \frac{1}{\epsilon^2}. \frac{n}{m-k+1}\ln\left(\frac{\binom{m}{m-k+1}}{4\delta}\right)$
\end_inset

, for 
\begin_inset Formula $0< \epsilon \leq \frac{1}{\sqrt{32}}$
\end_inset

, 
\begin_inset Formula $0 < \delta \leq \frac{e^{-1}}{4}$
\end_inset

, and 
\begin_inset Formula $n \geq 2m$
\end_inset

, where 
\begin_inset Formula $C = \frac{1}{18375}$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
end{assumption}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
For convenience, we denote by 
\begin_inset Formula $\Pr_I$
\end_inset

 the probability distribution induced by the bandit instance 
\begin_inset Formula $\mathcal{B}^I$
\end_inset

 and the possible randomisation introduced by the algorithm 
\begin_inset Formula $\mathcal{L}$
\end_inset

. Also, let 
\begin_inset Formula $S_{\mathcal{L}}$
\end_inset

 be the set of arms returned (as output) by 
\begin_inset Formula $\mathcal{L}$
\end_inset

, and 
\begin_inset Formula $T_S$
\end_inset

 be the total number of times the arms in 
\begin_inset Formula $S \subseteq \mathcal{A}$
\end_inset

 get sampled until 
\begin_inset Formula $\mathcal{L}$
\end_inset

 stops.
\end_layout

\begin_layout Standard
Then, as 
\begin_inset Formula $\mathcal{L}$
\end_inset

 solves 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
QFK
\end_layout

\end_inset

, for all 
\begin_inset Formula $I \in \I_{k-1}$
\end_inset

 
\begin_inset Formula \begin{equation}
\label{eq:contra}
 \Pr_I\{S_\mathcal{L} \subseteq I_0 \cup I\} \geq 1 - \delta.
\end{equation}
\end_inset


\end_layout

\begin_layout Standard
Therefore, for all 
\begin_inset Formula $I \in \I_{k-1}$
\end_inset

 
\begin_inset Formula \begin{equation}
 \mathbb{E}_{I}[T_\mathcal{A}] \leq C \frac{n}{m-k+1} \ln\left(\frac{\binom{m}{m-k+1}}{4\delta}\right).
\end{equation}
\end_inset


\end_layout

\begin_layout Subsubsection
Changing 
\begin_inset Formula $\Pr_{I}$
\end_inset

 to 
\begin_inset Formula $\Pr_{I \cup Q}$
\end_inset

 where 
\begin_inset Formula $Q \in \bar{I}$
\end_inset

 s.t. 
\begin_inset Formula $|Q| = m-k+1$
\end_inset

: 
\end_layout

\begin_layout Standard
Consider an arbitrary but fixed 
\begin_inset Formula $I \in \I_{k-1}$
\end_inset

. Consider a fixed partitioning of 
\begin_inset Formula $\A$
\end_inset

, into 
\begin_inset Formula $\bfloor{\frac{n}{m-k+1}}$
\end_inset

 subsets of size 
\begin_inset Formula $(m-k+1)$
\end_inset

 each. If Assumption
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "asmp:contra"
plural "false"
caps "false"
noprefix "false"

\end_inset

 is correct, then for the instance 
\begin_inset Formula $\mathcal{B}^{I}$
\end_inset

, there are at most 
\begin_inset Formula $\bfloor{\frac{n}{4(m-k+1})}-1$
\end_inset

 partitions 
\begin_inset Formula $B \subset\bar{I}$
\end_inset

, such that 
\begin_inset Formula $\mathbb{E}_{I}\left[T_B\right] \geq \frac{4C}{\epsilon^2}\ln\left(\frac{1}{4\delta}\right)$
\end_inset

. Now, as 
\begin_inset Formula $\bfloor{\frac{n-m}{m-k+1}} - \left(\bfloor{\frac{n}{4(m-k+1)}} - 1\right)$
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% $ > 
\backslash
bfloor{
\backslash
frac{n}{2(m-k+1)}} - 
\backslash
frac{n}{4(m-k+1)}$
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Formula $\geq \bfloor{\frac{n}{4(m-k+1)}} + 1 > 0$
\end_inset

; therefore, there exists at least one subset 
\begin_inset Formula $Q \in \bar{I}$
\end_inset

 such that 
\begin_inset Formula $|Q| = m-k+1$
\end_inset

, and 
\begin_inset Formula $\mathbb{E}_{I}\left[T_Q\right] < \frac{4C}{\epsilon^2}\ln\left(\frac{\binom{m}{m-k+1}}{4\delta}\right)$
\end_inset

. Define 
\begin_inset Formula $T^* = \frac{16C}{\epsilon^2}\ln\left(\frac{\binom{m}{m-k+1}}{4\delta}\right)$
\end_inset

. Then using Markov's inequality we get: 
\begin_inset Formula \begin{equation}\label{eq:lbusage}
 \Pr_{I}\left\{T_Q \geq T^*\right\} < \frac{1}{4}.
\end{equation}
\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\Delta = 2\epsilon T^* + \sqrt{T^*}$
\end_inset

 and also let 
\begin_inset Formula $K_Q$
\end_inset

 be the total rewards obtained from 
\begin_inset Formula $Q$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
begin{lemma}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "lem:boundreward"

\end_inset

 If 
\begin_inset Formula $I \in \I_{k-1}$
\end_inset

 and 
\begin_inset Formula $Q \in \bar{I}$
\end_inset

 s.t. 
\begin_inset Formula $|Q| = m-k+1$
\end_inset

, then 
\begin_inset Formula \[\Pr_{I}\left\{T_{Q} \leq T^* \wedge K_{Q} \leq \frac{T_{Q}}{2} - \Delta\right\} \leq \frac{1}{4}\;.\]
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
end{lemma}
\end_layout

\end_inset

 
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $K_{Q}(t)$
\end_inset

 be the total sum obtained from 
\begin_inset Formula $Q$
\end_inset

 at the end of the trial 
\begin_inset Formula $t$
\end_inset

. As for 
\begin_inset Formula $\mathcal{B}^{I_0},\; \forall j\in Q\; \mu_j = 1/2 -2\epsilon$
\end_inset

, hence selecting and pulling one arm at each trial from 
\begin_inset Formula $Q$
\end_inset

 following any rule (deterministic or probabilistic) is equivalent to selection of a single arm from 
\begin_inset Formula $Q$
\end_inset

 for once and subsequently perform pulls on it. Hence whatever be the strategy of pulling one arm at each trial from 
\begin_inset Formula $Q$
\end_inset

, the expected reward for each pull will be 
\begin_inset Formula $1/2-2\epsilon$
\end_inset

. Let 
\begin_inset Formula $r_i$
\end_inset

 be the i.i.d. reward obtained from the 
\begin_inset Formula $i^\text{th}$
\end_inset

 trial. Then 
\begin_inset Formula $K_{Q}(t) = \sum_{i=1}^t r_i$
\end_inset

 and 
\begin_inset Formula $Var\left[r_i\right] = \left(\frac{1}{2} - 2\epsilon\right) \left(\frac{1}{2} + 2\epsilon\right) = \left(\frac{1}{4} - 4\epsilon^2\right) < \frac{1}{4}$
\end_inset

. As 
\begin_inset Formula $\forall i: 1 \leq i \leq t$
\end_inset

, 
\begin_inset Formula $r_i$
\end_inset

 are i.i.d., we get 
\begin_inset Formula $Var[K_{Q}(t)] = \sum_{i=1}^tVar(r_i) < \frac{t}{4}$
\end_inset

. Now we can write the following: 
\begin_inset Formula \begin{eqnarray}
  &&\Pr_{I}\left\{\min\limits_{1\leq t \leq T^*} \left(K_{Q}(t) -t\left(\frac{1}{2}-2\epsilon\right)\right) \leq -\sqrt{T^*}\right\} \nonumber\\
    & \leq & \Pr_{I}\left\{\max\limits_{1\leq t \leq T^*} \left|K_{Q}(t) -t\left(\frac{1}{2}-2\epsilon\right)\right|  \geq  \sqrt{T^*}\right\}\nonumber\\
    & \leq & \frac{Var[K_{Q}(T^*)]}{T^*} < \frac{1}{4},
\end{eqnarray}
\end_inset

wherein we have used Kolmogorov's inequality. 
\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
begin{lemma}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "lem:lb1"

\end_inset

 Let 
\begin_inset Formula $I \in \I_{k-1}$
\end_inset

 and 
\begin_inset Formula $Q \in \I_{m-k+1}$
\end_inset

 such that 
\begin_inset Formula $Q \subseteq \bar{I}$
\end_inset

, and let 
\begin_inset Formula $W$
\end_inset

 be some fixed sequence of rewards obtained by a single run of algorithm 
\begin_inset Formula $\mathcal{L}$
\end_inset

 on 
\begin_inset Formula $\mathcal{B}^{I}$
\end_inset

 such that 
\begin_inset Formula $T_{Q} \leq T^*$
\end_inset

 and 
\begin_inset Formula $K_{Q} \geq \frac{T_{Q}}{2} - \Delta$
\end_inset

, then: 
\begin_inset Formula \begin{equation}
  \Pr_{I \cup Q}\{W\} > \Pr_{I}\{W\}\cdot \exp(-32\epsilon\Delta).
 \end{equation}
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
end{lemma}
\end_layout

\end_inset

 
\end_layout

\begin_layout Proof
Recall the fact that all the arms in 
\begin_inset Formula $Q$
\end_inset

 have the same mean. Hence, if chosen one at each trial (following any strategy), the expected reward at each trial remains the same. Hence the probability of getting a given reward sequence generated from 
\begin_inset Formula $Q$
\end_inset

 is independent of the sampling strategy. 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% by following any sequential strategy will be the same.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%  as the probability of generating that reward sequence by pulling any fixed arm in $Q$.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

Again as the arms in 
\begin_inset Formula $Q$
\end_inset

 have higher mean in 
\begin_inset Formula $\mathcal{B}^{Q}$
\end_inset

, the probability of getting the sequence (of rewards) decreases monotonically as the 1-rewards for 
\begin_inset Formula $\mathcal{B}^{I_0}$
\end_inset

 become fewer. So we get 
\begin_inset Formula \begin{align}
& \Pr_{I \cup Q}\{W\}  =  \Pr_{I}\{W\} \frac{\left(\frac{1}{2} + 2\epsilon\right)^{K_{Q}} \left(\frac{1}{2} - 2\epsilon\right)^{T_{Q}-K_{Q}}}{\left(\frac{1}{2} - 2\epsilon\right)^{K_{Q}} \left(\frac{1}{2} + 2\epsilon\right)^{T_{Q}-K_{Q}}} \nonumber\\
& \geq \Pr_{I}\{W\} \frac{\left(\frac{1}{2} + 2\epsilon\right)^{\left(\frac{T_{Q}}{2}-\Delta\right)} \left(\frac{1}{2} - 2\epsilon\right)^{\left(\frac{T_{Q}}{2}+\Delta\right)}}{\left(\frac{1}{2} - 2\epsilon\right)^{\left(\frac{T_{Q}}{2}-\Delta\right)} \left(\frac{1}{2} + 2\epsilon\right)^{\left(\frac{T_{Q}}{2}+\Delta\right)}} \nonumber\\
& = \Pr_{I}\{W\}\cdot \left(\frac{\frac{1}{2} - 2\epsilon}{\frac{1}{2} + 2\epsilon}\right)^{2\Delta} \nonumber\\
& >  \Pr_{I}\{W\}\cdot \exp(-32\epsilon\Delta) \left[\text{ for } 0 < \epsilon \leq \frac{1}{\sqrt{32}}\right]\nonumber.
\end{align}
\end_inset


\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
begin{lemma}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "lem:boundallreward"

\end_inset

 If 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:lbusage"
plural "false"
caps "false"
noprefix "false"

\end_inset

 holds for an 
\begin_inset Formula $I \in \I_{k-1}$
\end_inset

 and 
\begin_inset Formula $Q \in \I_{m-k+1}$
\end_inset

 such that 
\begin_inset Formula $Q \subseteq \bar{I}$
\end_inset

, and if 
\begin_inset Formula $\mathcal{W}$
\end_inset

 is the set of all possible reward sequences 
\begin_inset Formula $W$
\end_inset

, obtained by algorithm 
\begin_inset Formula $\mathcal{L}$
\end_inset

 on 
\begin_inset Formula $\mathcal{B}^{I}$
\end_inset

, then 
\begin_inset Formula $\Pr_{I \cup Q}\{\mathcal{W}\} > \left(\Pr_{I}\left\{\mathcal{W}\right\}-\frac{1}{2}\right)\cdot 4\delta.$
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   
\backslash
begin{equation*}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%     
\backslash
Pr_{I 
\backslash
cup Q}
\backslash
{
\backslash
mathcal{W}
\backslash
} > 
\backslash
left(
\backslash
Pr_{I}
\backslash
left
\backslash
{
\backslash
mathcal{W}
\backslash
right
\backslash
}-
\backslash
frac{1}{2}
\backslash
right)
\backslash
cdot 4
\backslash
delta.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   
\backslash
end{equation*}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

 In particular, 
\begin_inset Formula \begin{equation}\label{eq:err2delta}
    \Pr_{I \cup Q}\{S_\mathcal{L} \subseteq I_0 \cup I\} > \frac{\delta}{\binom{m}{m-k+1}}.
   \end{equation}
\end_inset


\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
end{lemma}
\end_layout

\end_inset

 
\end_layout

\begin_layout Proof
Let for some fixed sequence (of rewards) 
\begin_inset Formula $W$
\end_inset

, 
\begin_inset Formula $T_{Q}^W$
\end_inset

 and 
\begin_inset Formula $ K_{Q}^W $
\end_inset

 respectively denote the total number of samples received by the arms in 
\begin_inset Formula $Q$
\end_inset

 and the total number of 
\begin_inset Formula $1$
\end_inset

-rewards obtained before the algorithm 
\begin_inset Formula $\mathcal{L}$
\end_inset

 stopped. Then: 
\begin_inset Formula \begin{align*}
 &\Pr_{I \cup Q}\{W\}  = \Pr_{I \cup Q}(W : W \in \mathcal{W}) \nonumber\\
& \geq  \Pr_{I \cup Q}\left\{W : W \in \mathcal{W} \bigwedge T_{Q}^W \leq T^* \bigwedge  K_{Q}^W \geq \frac{T_{Q}^W}{2} - \Delta\right\}\\
& >  \Pr_{I}\left\{W : W \in \mathcal{W} \bigwedge T_{Q}^W \leq T^* \bigwedge  K_{Q}^W \geq \frac{T_{Q}^W}{2} - \Delta\right\}\cdot \exp(-32\epsilon\Delta)\\
& \geq \left(\Pr_{I}\left\{W : W \in \mathcal{W} \bigwedge T_{Q}^W \leq T^*\right\}-\frac{1}{4}\right)\cdot \exp(-32\epsilon\Delta)\\
& \geq  \left(\Pr_{I}\left\{\mathcal{W}\right\}-\frac{1}{2}\right)\cdot \frac{4\delta}{\binom{m}{m-k+1}}\; \text{ for } C = \frac{1}{18375},\; \delta < \frac{e^{-1}}{4} .\\
\end{align*}
\end_inset

In the above, the 
\begin_inset Formula $3^\text{rd}$
\end_inset

, 
\begin_inset Formula $4^\text{th}$
\end_inset

 and the last step are obtained using Lemma
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lem:lb1"
plural "false"
caps "false"
noprefix "false"

\end_inset

, Lemma
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lem:boundreward"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and Equation
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:lbusage"
plural "false"
caps "false"
noprefix "false"

\end_inset

 respectively. The inequality
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:err2delta"
plural "false"
caps "false"
noprefix "false"

\end_inset

 is obtained by using inequality
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:contra"
plural "false"
caps "false"
noprefix "false"

\end_inset

, as 
\begin_inset Formula $\Pr_{I}\{S_\mathcal{L} \in I_0 \} > 1 - \delta \geq 1 - \frac{e^{-1}}{4} > \frac{3}{4}$
\end_inset

. 
\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% 
\backslash
begin{lemma}
\backslash
label{lem:probopt}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% Let , $
\backslash
mathcal{L}$ be a 
\backslash
iispa, and  $I 
\backslash
in 
\backslash
I_{k-1}$ and $Q 
\backslash
in 
\backslash
I_{m-k+1}$ such that $Q 
\backslash
subseteq 
\backslash
bar{I}$. Also, let, a $k$-sized subset $S^* 
\backslash
subseteq I_0 
\backslash
cup I$ be such that, for any other $S' 
\backslash
subseteq I_0 
\backslash
cup I$ of the same size,  $ 
\backslash
Pr_{I 
\backslash
cup Q}
\backslash
{S_
\backslash
mathcal{L} = S^*: S_
\backslash
mathcal{L} 
\backslash
subseteq I_0 
\backslash
cup I
\backslash
}  
\backslash
geq  
\backslash
Pr_{I 
\backslash
cup Q}
\backslash
{S_
\backslash
mathcal{L} = S': S_
\backslash
mathcal{L} 
\backslash
subseteq I_0 
\backslash
cup I
\backslash
} $. Then, 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% for any pair $(k,m)$ satisfying $m 
\backslash
leq 2k-2$ or $m 
\backslash
geq 2k$, 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% $$
\backslash
Pr_{I 
\backslash
cup Q}
\backslash
{
\backslash
mu(S_
\backslash
mathcal{L}) 
\backslash
equiv 
\backslash
mu(S^*)
\backslash
} > 
\backslash
frac{m-k+1}{
\backslash
binom{m}{k}} 
\backslash
cdot 
\backslash
frac{
\backslash
delta}{
\backslash
binom{m}{m-k+1}}.$$
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% 
\backslash
end{lemma}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% 
\backslash
begin{proof}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% As there are total $
\backslash
binom{m}{k}$ choices for $S_
\backslash
mathcal{L} 
\backslash
in I_0 
\backslash
cup I$, $ 
\backslash
Pr_{I 
\backslash
cup Q}
\backslash
{S_
\backslash
mathcal{L} = S^*
\backslash
}  
\backslash
geq  
\backslash
frac{1}{
\backslash
binom{m}{k}}
\backslash
frac{
\backslash
delta}{
\backslash
binom{m}{m-k+1}}$. Now, as $k+1 
\backslash
leq m 
\backslash
leq 2k-2$ or $m 
\backslash
geq 2k$, for any 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% choice of $S^*$,  there are at least $(m-k)$  different  $k$-sized  subsets  $S' 
\backslash
subseteq I_0
\backslash
cup I$ other than $S^*$,  such that, $S' 
\backslash
not
\backslash
equiv S^*$, but $
\backslash
mu(S) 
\backslash
equiv 
\backslash
mu(S')$; formally,
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% $|
\backslash
{S':  S'  
\backslash
subset I_0 
\backslash
cup I 
\backslash
wedge  |S'| = k 
\backslash
wedge S'
\backslash
not
\backslash
equiv S^* 
\backslash
wedge 
\backslash
mu(S') 
\backslash
equiv 
\backslash
mu(S^*)
\backslash
}| 
\backslash
geq m-k$.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% Now, as $
\backslash
mathcal{L}$ is a 
\backslash
iispa, by Corollary~
\backslash
ref{cor:iispaevntprob}, each of these $S'$ has the equal probability of being the output. Formally,  $
\backslash
Pr_{I
\backslash
cup Q}
\backslash
{S_
\backslash
mathcal{L} 
\backslash
equiv S' : S' 
\backslash
subseteq I_0 
\backslash
cup I 
\backslash
wedge 
\backslash
mu(S') 
\backslash
equiv 
\backslash
mu(S)^*
\backslash
} = 
\backslash
Pr_{I
\backslash
cup Q}
\backslash
{S_
\backslash
mathcal{L} 
\backslash
equiv S^*
\backslash
}$. Therefore, summing over all these
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% $(m-k+1)$ subsets of $I_0 
\backslash
cup I$ we prove the lemma.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% 
\backslash
end{proof}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Summing Over 
\begin_inset Formula $\I_{k-1}$
\end_inset

 and 
\begin_inset Formula $\I_m$
\end_inset


\end_layout

\begin_layout Standard
Now, we sum up the probability of errors across all the instances in 
\begin_inset Formula $\I_{k-1}$
\end_inset

 and 
\begin_inset Formula $\I_m$
\end_inset

. If the Assumption
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "asmp:contra"
plural "false"
caps "false"
noprefix "false"

\end_inset

 is true, using the pigeon-hole principle we show that there exists some instance for which the mistake probability is greater than 
\begin_inset Formula $\delta$
\end_inset

.
\end_layout

\begin_layout Standard

\begin_inset Formula \begin{align*}
 & \sum_{J \in \I_m} \Pr_J\{S_\mathcal{L} \nsubseteq J\} \\
 & \geq \sum_{J \in \I_m} \sum_{\substack{J' \subset J\\ : |J'| = m-k+1}} \Pr_J\{S_\mathcal{L} \subseteq \{J \setminus J'\} \cup I_0\} \\
 & \geq \sum_{J \in \I_m} \sum_{\substack{J' \subset J\\ : |J'| = m-k+1}} \Pr_J\{\exists a \in I_0: S_\mathcal{L} = \{J \setminus J'\} \cup\{a\}\} \\
 & = \sum_{J \in \I_m} \sum_{\substack{J' \subset J\\ : |J'| = m-k+1}} \sum_{I\in\I_{k-1}} \idop[I \cup J'= J] \cdot \Pr_J\{S_\mathcal{L} \subseteq I \cup I_0\}\\
 & = \sum_{J \in \I_m} \sum_{\substack{J' \subset \mathcal{A}\setminus I_0\\ : |J'| = m-k+1}} \sum_{I\in\I_{k-1}} \idop[I \cup J'= J] \cdot \Pr_J\{S_\mathcal{L} \subseteq I \cup I_0\}\\
 & = \sum_{J \in \I_m}  \sum_{I\in\I_{k-1}} \sum_{\substack{J' \subset \mathcal{A}\setminus I_0\\ : |J'| = m-k+1}}\idop[I \cup J'= J] \cdot \Pr_J\{S_\mathcal{L} \subseteq I \cup I_0\}\\
 & = \sum_{I\in\I_{k-1}} \sum_{J \in \I_m} \sum_{\substack{J' \subset \bar{I}\\ : |J'| = m-k+1}}\idop[I \cup J'= J] \cdot \Pr_J\{S_\mathcal{L} \subseteq I \cup I_0\}\\
 & = \sum_{I\in\I_{k-1}} \sum_{\substack{J' \subset \bar{I}\\ : |J'| = m-k+1}} \sum_{J \in \I_m} \idop[I \cup J'= J] \cdot \Pr_J\{S_\mathcal{L} \subseteq I \cup I_0\}\\
 & = \sum_{I\in\I_{k-1}} \sum_{\substack{J' \subset \bar{I}\\ : |J'| = m-k+1}} \Pr_{I\cup J'}\{S_\mathcal{L} \subseteq I \cup I_0\}
\end{align*}
\end_inset


\end_layout

\begin_layout Standard
Recall that 
\begin_inset Formula $\forall I \in \I_{k-1}$
\end_inset

 there exists a set 
\begin_inset Formula $Q \subset \mathcal{A}\setminus\{I\cup I_0\}: |Q| = (m-k+1)$
\end_inset

, such that 
\begin_inset Formula $T_Q < T^*$
\end_inset

. Therefore, 
\begin_inset Formula \begin{align*}
 & \sum_{J \in \I_m} \Pr_J\{S_\mathcal{L} \nsubseteq J\}\\
 & \geq \sum_{I\in\I_{k-1}} \sum_{\substack{J' \subset \bar{I}\\ : |J'| = m-k+1}} \Pr_{I\cup J'}\{S_\mathcal{L} \subseteq I \cup I_0\}\\
 & > \sum_{I\in\I_{k-1}} \sum_{\substack{J' \subset \bar{I}\\ : |J'| = m-k+1}} \frac{\delta}{\binom{m}{m-k+1}}\\
 & \geq \sum_{I\in\I_{k-1}} \binom{n-m}{m-k+1} \cdot \frac{\delta}{\binom{m}{m-k+1}}\\
 & \geq \binom{n-(m-k+1)}{k-1} \cdot \binom{n-m}{m-k+1} \cdot \frac{\delta}{\binom{m}{m-k+1}}\\
 & = \binom{n-(m+k-1)}{m} \delta\\
 & = |\I_m| \delta.
\end{align*}
\end_inset


\end_layout

\begin_layout Standard
Hence, we get a contradiction to Assumption
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "asmp:contra"
plural "false"
caps "false"
noprefix "false"

\end_inset

, thereby proving the theorem. 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% for $m 
\backslash
leq 2k -2$ and $m 
\backslash
geq 2k$.
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% 
\backslash
subsection{Case $m = 2k -1 < 
\backslash
frac{n}{2}$:}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% Let $m_0 = 2k-1$, and let $N_0$ be the worst case sample complexity for $m = m_0$.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% We notice that the identification of $k$ arms from the best
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% $m$ arms becomes harder as $m$ decreases.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% Therefore, $N_0$ is not lesser than the minimum number of samples required for $m = m_0 + 1$, and from the previous case we can write
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% $ N_0 
\backslash
geq 
\backslash
frac{1}{18375}
\backslash
frac{1}{
\backslash
epsilon^2}. 
\backslash
frac{n}{(m_0+1)-k+1}
\backslash
ln
\backslash
left(
\backslash
frac{
\backslash
binom{m}{m-k+1}}{4
\backslash
delta}
\backslash
right)
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%   
\backslash
geq 
\backslash
frac{1}{36750}
\backslash
frac{1}{
\backslash
epsilon^2}. 
\backslash
frac{n}{m_0-k+1}
\backslash
ln
\backslash
left(
\backslash
frac{
\backslash
binom{m}{m-k+1}}{4
\backslash
delta}
\backslash
right).$
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% % Therefore, 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% % $$
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% % N_0 
\backslash
geq 
\backslash
frac{1}{18375}
\backslash
frac{1}{
\backslash
epsilon^2}. 
\backslash
frac{n}{(m_0+1)-k+1}
\backslash
ln
\backslash
left(
\backslash
frac{
\backslash
binom{m}{m-k+1}}{4
\backslash
delta}
\backslash
right) 
\backslash
geq 
\backslash
frac{1}{36750}
\backslash
frac{1}{
\backslash
epsilon^2}. 
\backslash
frac{n}{m_0-k+1}
\backslash
ln
\backslash
left(
\backslash
frac{
\backslash
binom{m}{m-k+1}}{4
\backslash
delta}
\backslash
right).
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% % $$
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% Hence, Theorem~
\backslash
ref{thm:lbmainthm} is proved.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_body
\end_document
